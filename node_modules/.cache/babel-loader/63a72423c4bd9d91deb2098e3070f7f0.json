{"ast":null,"code":"var _jsxFileName = \"/Users/jessspo/Desktop/wildcodeschool/week20/cosmic_star/cosmostar/src/pages/Register.jsx\";\nimport React, { useState } from \"react\";\nimport \"./Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  // // React States\n  // const [errorMessages, setErrorMessages] = useState({});\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n  // // User Login info\n  // const database = [\n  //   {\n  //     username: \"user1\",\n  //     password: \"pass1\"\n  //   },\n  //   {\n  //     username: \"user2\",\n  //     password: \"pass2\"\n  //   }\n  // ];\n  // const errors = {\n  //   uname: \"invalid username\",\n  //   pass: \"invalid password\"\n  // };\n  // const handleSubmit = (event) => {\n  //   //Prevent page reload\n  //   event.preventDefault();\n  //   var { uname, pass } = document.forms[0];\n  //   // Find user login info\n  //   const userData = database.find((user) => user.username === uname.value);\n  //   // Compare user info\n  //   if (userData) {\n  //     if (userData.password !== pass.value) {\n  //       // Invalid password\n  //       setErrorMessages({ name: \"pass\", message: errors.pass });\n  //     } else {\n  //       setIsSubmitted(true);\n  //     }\n  //   } else {\n  //     // Username not found\n  //     setErrorMessages({ name: \"uname\", message: errors.uname });\n  //   }\n  // };\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"your full name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"date of birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: \"Register\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), \"        \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 24\n      }, this) : renderForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","renderErrorMessage","name","errorMessages","message","renderForm","handleSubmit","isSubmitted"],"sources":["/Users/jessspo/Desktop/wildcodeschool/week20/cosmic_star/cosmostar/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Register.css\";\n\nfunction Register() {\n  // // React States\n  // const [errorMessages, setErrorMessages] = useState({});\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // // User Login info\n  // const database = [\n  //   {\n  //     username: \"user1\",\n  //     password: \"pass1\"\n  //   },\n  //   {\n  //     username: \"user2\",\n  //     password: \"pass2\"\n  //   }\n  // ];\n\n  // const errors = {\n  //   uname: \"invalid username\",\n  //   pass: \"invalid password\"\n  // };\n\n  // const handleSubmit = (event) => {\n  //   //Prevent page reload\n  //   event.preventDefault();\n\n  //   var { uname, pass } = document.forms[0];\n\n  //   // Find user login info\n  //   const userData = database.find((user) => user.username === uname.value);\n\n  //   // Compare user info\n  //   if (userData) {\n  //     if (userData.password !== pass.value) {\n  //       // Invalid password\n  //       setErrorMessages({ name: \"pass\", message: errors.pass });\n  //     } else {\n  //       setIsSubmitted(true);\n  //     }\n  //   } else {\n  //     // Username not found\n  //     setErrorMessages({ name: \"uname\", message: errors.uname });\n  //   }\n  // };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n    );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>your full name </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>date of birth</label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        {/* <div className=\"input-container\">\n          <label>city of birth </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>time of birth </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div> */}\n        <div className=\"input-container\">\n          <label>email</label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"input-container\">\n          <label>password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"button-container\">\n        <input value=\"Register\" type=\"submit\"/>        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"login\">\n      <div className=\"login-form\">\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n      </div>\n    </div>\n  );\n}\n\nexport default Register;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;EAClB;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA,MAAMC,kBAAkB,GAAIC,IAAD,IACzBA,IAAI,KAAKC,aAAa,CAACD,IAAvB,iBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UAAwBC,aAAa,CAACC;EAAtC;IAAA;IAAA;IAAA;EAAA,QAFJ,CA9CkB,CAmDlB;;;EACA,MAAMC,UAAU,gBACd;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAM,QAAQ,EAAEC,YAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,OAAxB;UAAgC,QAAQ;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGL,kBAAkB,CAAC,OAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,OAAxB;UAAgC,QAAQ;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGA,kBAAkB,CAAC,OAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAqBE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,MAA5B;UAAmC,QAAQ;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGA,kBAAkB,CAAC,MAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF,eA0BE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,MAA5B;UAAmC,QAAQ;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGA,kBAAkB,CAAC,MAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BF,eA+BE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACA;UAAO,KAAK,EAAC,UAAb;UAAwB,IAAI,EAAC;QAA7B;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;;EAuCA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,UACGM,WAAW,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH,GAA+CF;IAD7D;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;KAlGQL,Q;AAoGT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}